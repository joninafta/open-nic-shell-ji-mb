name: Build and Test Filter RX Pipeline

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'plugin/p2p/box_250mhz/filter_rx_pipeline/**'
      - 'src/**'
      - 'script/**'
      - '.github/workflows/pr-build-test.yml'

  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test type to run'
        required: false
        default: 'regression'
        type: choice
        options:
          - smoke
          - regression
          - individual

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    env:
      OPEN_NIC_SHELL_ROOT: ${{ github.workspace }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Verilator
      run: |
        sudo apt-get update
        sudo apt-get install -y verilator
        verilator --version
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov scapy
        
    
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install linting tools
      run: |
        pip install flake8 black isort
        sudo apt-get update
        sudo apt-get install -y verilator
        
    - name: Lint Python code
      run: |
        echo "Linting Python files..."
        find plugin/p2p/box_250mhz/filter_rx_pipeline -name "*.py" -exec flake8 {} \; || echo "Python linting completed with warnings"
        
    - name: Check SystemVerilog syntax
      run: |
        echo "Checking SystemVerilog syntax..."
        find plugin/p2p/box_250mhz/filter_rx_pipeline -name "*.sv" -exec verilator --lint-only {} \; || echo "SystemVerilog syntax check completed"
